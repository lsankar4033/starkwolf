import Head from 'next/head';
import { useBlock } from '@starknet-react/core';
import WalletBar from '../components/WalletBar';
import ContractTest from '@/components/ContractTest';
import { useActivate } from '@/hooks/useActivate';
import { useContext } from 'react';
import { PlayerContext } from './_app';
import { IPlayerContext } from '@/types';
import { useJoinGame } from '@/hooks/useJoinGame';

export default function Home() {
  const { data, isLoading, isError } = useBlock({
    refetchInterval: 3000,
    blockIdentifier: 'latest',
  });

  const { player, signIn } = useContext(PlayerContext) as IPlayerContext;
  const { joinGame } = useJoinGame();
  const { isActivated, activate } = useActivate(player?.pubKey);

  return (
    <>
      <Head>
        <title>Create Starknet</title>
        <meta name="description" content="Generated by create-starknet" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <p>
          Get started by editing&nbsp;
          <code>pages/index.tsx</code>
        </p>
        <div>
          {isLoading
            ? 'Loading...'
            : isError
            ? 'Error while fetching the latest block hash'
            : `Latest block hash: ${data?.block_hash}`}
        </div>
        <WalletBar />
        <ContractTest />
        <button onClick={signIn}>SignIn</button>
        {isActivated ? <></> : <button onClick={activate}>Activate account</button>}
        <button
          onClick={() => {
            joinGame(BigInt(0));
          }}
        >
          Join game
        </button>
      </main>
    </>
  );
}
